name: CI
on: [push, pull_request]

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build on ${{ matrix.target }}
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
          - target: aarch64-unknown-linux-musl
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-linux-gnu
          - target: x86_64-unknown-linux-musl
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-freebsd
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
      - name: Build
        run: cargo build

  test:
    name: Test / ${{ matrix.feature }} / ${{ matrix.toolchain }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
        feature:
          - all
          - default
          - cli
          - gui
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Checkout gtk
        uses: actions/checkout@v4
        with:
          repository: GNOME/gtk
          ref: 4.10.4
          path: gtk4
        if: matrix.feature == 'gui' || matrix.feature == 'all'
      - name: Checkout adw
        uses: actions/checkout@v4
        with:
          repository: GNOME/libadwaita
          ref: 1.3.3
          path: libadwaita
        if: matrix.feature == 'gui' || matrix.feature == 'all'
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            gtk4/
            libadwaita/
          key: ${{ matrix.feature }}-${{ matrix.toolchain }}--cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install dependencies (gui)
        run: >
          sudo apt-get update &&
          sudo apt-get install -y
          build-essential
          meson
          ninja-build
          libxkbcommon-dev
          wayland-protocols
          libwayland-dev
          libxrandr-dev
          libxi-dev
          libxcursor-dev
          libxdamage-dev
          libxinerama-dev
          libgstreamer-plugins-bad1.0-dev
          libunwind-dev
          libgirepository1.0-dev
          gettext
          valac
        if: matrix.feature == 'gui' || matrix.feature == 'all'
      - uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/install-action@cargo-llvm-cov
      - run: |
          cd gtk4
          meson _build .
          cd _build
          ninja
          sudo ninja install
        if: matrix.feature == 'gui' || matrix.feature == 'all'
      - run: |
          cd libadwaita
          meson . _build -Dintrospection=disabled
          ninja -C _build
          sudo ninja -C _build install
        if: matrix.feature == 'gui' || matrix.feature == 'all'
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Build
        run: cargo build --no-default-features --features ${{ matrix.feature }} --verbose
        if: matrix.feature != 'all'
      - name: Build (all features)
        run: cargo build --all-features --verbose
        if: matrix.feature == 'all'
      - name: Test
        run: cargo test --no-default-features --features ${{ matrix.feature }} --verbose
        if: matrix.feature != 'gui' && matrix.feature != 'all'
      - name: Test (all features)
        uses: coactions/setup-xvfb@v1
        with:
          run: cargo test --all-features -- --test-threads=1
        if: matrix.feature == 'all'
      - name: Test gui
        uses: coactions/setup-xvfb@v1
        with:
          run: cargo test --no-default-features --features ${{ matrix.feature }} -- --test-threads=1
        if: matrix.feature == 'gui' && matrix.feature != 'all'
      - name: Generate code coverage
        uses: coactions/setup-xvfb@v1
        with:
          run: cargo llvm-cov --workspace --no-default-features --features ${{ matrix.feature }} --lcov --output-path lcov.info
        if: "${{ (!startsWith(github.ref, 'refs/tags/')) && (matrix.feature != 'all') }}"
      - name: Generate code coverage (all features)
        uses: coactions/setup-xvfb@v1
        with:
          run: cargo llvm-cov --workspace --all-features --lcov --output-path lcov.info
        if: "${{ (!startsWith(github.ref, 'refs/tags/')) && (matrix.feature == 'all') }}"
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info
          verbose: true
          flags: ${{ matrix.feature }}
        if: "!startsWith(github.ref, 'refs/tags/')"

  features:
    name: Features
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: features-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/install-action@cargo-hack
      - run: brew install gtk4 libadwaita
      - name: Check features
        run: cargo hack check --feature-powerset --no-dev-deps

  format:
    name: Format
    if: "!startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: rustfmt-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check --verbose

  lint:
    name: Lint
    if: "!startsWith(github.ref, 'refs/tags/')"
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: clippy-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - run: brew install gtk4 libadwaita
      - run: cargo clippy --all-features -- -D clippy::all -D warnings

  release:
    needs: [features, build, test]
    name: Release
    permissions:
      contents: write
    if: github.repository_owner == 'charlesrocket' && startsWith(github.ref, 'refs/tags/')
    uses: ./.github/workflows/cd.yml
    secrets:
      CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
